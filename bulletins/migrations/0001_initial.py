# Generated by Django 5.1.5 on 2025-03-01 18:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=9, unique=True)),
                ('debut', models.DateField()),
                ('fin', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('coefficient', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant'), ('parent', 'Parent')], default='parent', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='custom_user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='custom_user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], default='M', max_length=1)),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('lieu_naissance', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lieu de naissance')),
                ('matricule', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Matricule')),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bulletins.classe')),
                ('parent', models.ForeignKey(blank=True, limit_choices_to={'role': 'parent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enfants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(max_length=9)),
                ('classe', models.CharField(blank=True, max_length=100, null=True)),
                ('etablissement', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.JSONField(blank=True, null=True)),
                ('absences', models.JSONField(blank=True, null=True)),
                ('moyenne_annuelle', models.FloatField(default=0.0)),
                ('passe_classe', models.BooleanField(default=False)),
                ('date_archivage', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_points_semestre_1', models.FloatField(default=0)),
                ('total_points_semestre_2', models.FloatField(default=0)),
                ('mention_semestre_1', models.CharField(blank=True, max_length=20, null=True)),
                ('mention_semestre_2', models.CharField(blank=True, max_length=20, null=True)),
                ('mention_annuelle', models.CharField(blank=True, max_length=20, null=True)),
                ('rang_semestre_1', models.IntegerField(blank=True, null=True)),
                ('rang_semestre_2', models.IntegerField(blank=True, null=True)),
                ('rang_annuel', models.IntegerField(blank=True, null=True)),
                ('eleve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bulletins.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('adresse', models.CharField(max_length=200)),
                ('ville', models.CharField(max_length=100)),
                ('pays', models.CharField(max_length=100)),
                ('telephone', models.CharField(default='+2210000000', help_text='Format recommandé : +221XXXXXXXXX', max_length=20, validators=[django.core.validators.RegexValidator(message='Entrez un numéro valide.', regex='^\\+?\\d{9,15}$')])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('choix_matiere_quatrieme', models.BooleanField(default=False, help_text='Si activé, les élèves de 4ème choisiront entre PC et une langue, comme en 3ème.')),
                ('ia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Inspection Académique')),
                ('ief', models.CharField(blank=True, max_length=100, null=True, verbose_name="Inspection de l'Éducation et de la Formation")),
                ('annee_scolaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='etablissements', to='bulletins.anneescolaire')),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='etablissement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletins.etablissement'),
        ),
        migrations.CreateModel(
            name='Frais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_frais', models.CharField(choices=[('inscription', "Frais d'inscription"), ('mensualite', 'Mensualité'), ('autre', 'Autre frais')], default='mensualite', max_length=20)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant à payer')),
                ('description', models.TextField(blank=True, help_text='Description du frais (optionnel)', null=True)),
                ('annee_scolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frais', to='bulletins.anneescolaire')),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frais', to='bulletins.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Echeance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_echeance', models.DateField(verbose_name="Date d'échéance")),
                ('montant_du', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant dû')),
                ('statut', models.CharField(choices=[('paye', 'Payé'), ('partiel', 'Partiel'), ('impaye', 'Impayé')], default='impaye', max_length=20)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='echeances', to='bulletins.eleve')),
                ('frais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='echeances', to='bulletins.frais')),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('classes', models.ManyToManyField(blank=True, related_name='enseignants', to='bulletins.classe')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('matieres', models.ManyToManyField(to='bulletins.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='ChoixMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choix_matieres', to='bulletins.eleve')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletins.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('motif', models.CharField(blank=True, max_length=255, null=True)),
                ('semestre', models.PositiveIntegerField(choices=[(1, 'Semestre 1'), (2, 'Semestre 2')], default=1, verbose_name='Semestre')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='bulletins.eleve')),
                ('matiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bulletins.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='NiveauScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('6e', '6ᵉ (Sixième)'), ('5e', '5ᵉ (Cinquième)'), ('4e', '4ᵉ (Quatrième)'), ('3e', '3ᵉ (Troisième)'), ('2nde', '2ⁿᵈᵉ (Seconde)'), ('1ere', '1ʳᵉ (Première)'), ('Tle', 'Tᵉʳᵐ (Terminale)')], max_length=10, unique=True)),
                ('ordre', models.IntegerField(blank=True, null=True)),
                ('matieres_obligatoires', models.ManyToManyField(related_name='niveaux_obligatoires', to='bulletins.matiere')),
                ('matieres_optionnelles', models.ManyToManyField(blank=True, related_name='niveaux_optionnels', to='bulletins.matiere')),
            ],
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bulletins.niveauscolaire'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_devoir', models.FloatField(default=0, verbose_name='Note des devoirs')),
                ('note_composition', models.FloatField(default=0, verbose_name='Note des compositions')),
                ('semestre', models.PositiveIntegerField(choices=[(1, 'Semestre 1'), (2, 'Semestre 2')], default=1, verbose_name='Semestre')),
                ('date', models.DateField(auto_now_add=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletins.eleve')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletins.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('importance', models.CharField(choices=[('faible', 'Faible'), ('normale', 'Normale'), ('importance', 'Importance')], default='normale', max_length=10)),
                ('lue', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_paye', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant payé')),
                ('date_paiement', models.DateField(default=django.utils.timezone.now, verbose_name='Date de paiement')),
                ('mode_paiement', models.CharField(choices=[('especes', 'Espèces'), ('cheque', 'Chèque'), ('virement', 'Virement bancaire'), ('mobile', 'Mobile Money')], default='especes', max_length=20)),
                ('statut', models.CharField(choices=[('paye', 'Payé'), ('partiel', 'Partiel'), ('impaye', 'Impayé')], default='paye', max_length=20)),
                ('reference', models.CharField(blank=True, help_text='Référence du paiement (ex: numéro de chèque)', max_length=100, null=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='bulletins.eleve')),
                ('frais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='bulletins.frais')),
            ],
        ),
        migrations.AddIndex(
            model_name='eleve',
            index=models.Index(fields=['classe', 'nom'], name='bulletins_e_classe__888e53_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='choixmatiere',
            unique_together={('eleve', 'matiere')},
        ),
    ]
